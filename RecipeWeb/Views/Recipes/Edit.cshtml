@model RecipeWeb.Data.Recipe

@{
    ViewData["Title"] = "Edit Recipe";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Recipe</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
</head>
<body class="bg-gray-100 p-4">
    <div class="max-w-4xl mx-auto bg-white p-8 shadow-md rounded-lg">
        <h1 class="text-3xl font-bold text-center mb-8 text-gray-800">EDIT RECIPE</h1>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="bg-red-100 text-red-600 p-3 rounded mb-4">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="RecipeId" />
            <input type="hidden" asp-for="ImageUrl" /> <!-- Giữ URL ảnh cũ -->
            <input type="hidden" asp-for="UpdateAt" />

            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2">Recipe title</label>
                <input asp-for="RecipeName" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" required />
                <span asp-validation-for="RecipeName" class="text-red-500 text-sm"></span>
            </div>

            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2">Description</label>
                <textarea asp-for="Description" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline"></textarea>
                <span asp-validation-for="Description" class="text-red-500 text-sm"></span>
            </div>

            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2">Category</label>
                <select asp-for="CategoryId" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" asp-items="ViewBag.CategoryId"></select>
            </div>

            <div class="flex flex-wrap mb-4">
                <div class="w-full md:w-1/3 mb-4 md:mb-0">
                    @if (!string.IsNullOrEmpty(Model?.ImageUrl))
                    {
                        <img id="previewImage" src="@Model.ImageUrl" alt="Recipe Image" class="w-full h-auto mb-2 rounded-lg shadow">
                    }
                    else
                    {
                        <img id="previewImage" src="https://via.placeholder.com/150" alt="Recipe Image" class="w-full h-auto mb-2 rounded-lg shadow">
                    }

                    <input type="file" id="ImageFile" name="imageFile" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" accept="image/*">
                </div>
                <div class="w-full md:w-2/3 md:pl-4 mt-6">
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Cook Time:</label>
                        <input asp-for="CookTime" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" placeholder="Minutes" />
                    </div>
                    <div>
                        <label class="block text-gray-700 text-sm font-bold mb-2">Origin:</label>
                        <select asp-for="OriginId" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" asp-items="ViewBag.OriginId"></select>
                    </div>
                </div>
            </div>

            <!-- Ingredients -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2">Ingredients</label>
                <div id="ingredientsContainer">
                    @if (Model.DetailRecipeIngredients != null && Model.DetailRecipeIngredients.Any())
                    {
                        var ingredientsList = Model.DetailRecipeIngredients.ToList(); // Chuyển sang List để có thể dùng []

                        for (int i = 0; i < ingredientsList.Count; i++)
                        {
                            <div class="flex space-x-2 mb-2">
                                <input type="hidden" name="DetailRecipeIngredients[@i].RecipeId" value="@Model.RecipeId" />
                                <input type="hidden" name="DetailRecipeIngredients[@i].IngredientId" value="@ingredientsList[i].IngredientId" />

                                <select name="DetailRecipeIngredients[@i].IngredientId" class="shadow border rounded py-2 px-3 text-gray-700 w-2/3">
                                    @foreach (var ingredient in ViewBag.Ingredients)
                                    {
                                        <option value="@ingredient.Value" selected="@(ingredient.Value == ingredientsList[i].IngredientId.ToString() ? "selected" : null)">
                                            @ingredient.Text
                                        </option>
                                    }
                                </select>

                                <input type="text" name="DetailRecipeIngredients[@i].Amount" value="@ingredientsList[i].Amount" class="shadow border rounded py-2 px-3 text-gray-700 w-1/3" placeholder="Amount">
                                <button type="button" onclick="removeIngredient(this)" class="bg-red-500 text-white px-3 py-1 rounded">x</button>
                            </div>
                        }
                    }
                </div>
                <button type="button" onclick="addIngredient()" class="bg-blue-500 text-white px-4 py-2 rounded-lg mt-2">Add Ingredient</button>
            </div>

            <!-- Instructions -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2">Instructions</label>
                <textarea asp-for="Instructions" class="shadow border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline" rows="6"></textarea>
                <span asp-validation-for="Instructions" class="text-red-500 text-sm"></span>
            </div>
            <div class="flex justify-between items-center mt-8">
                <button type="button" onclick="history.back()" class="bg-gray-200 text-gray-700 hover:bg-gray-300 px-4 py-2 rounded-lg flex items-center">
                    <i class="fas fa-arrow-left mr-2"></i> Back to List
                </button>

                <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition">
                    <i class="fas fa-save mr-2"></i> Save
                </button>
            </div>

        </form>
    </div>

    <script>
        let ingredientIndex = @Model.DetailRecipeIngredients?.Count() ?? 0;

        document.getElementById('ImageFile').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('previewImage').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        function addIngredient() {
            const container = document.getElementById("ingredientsContainer");
            const div = document.createElement("div");
            div.classList.add("flex", "space-x-2", "mb-2");

            div.innerHTML = `
                        <select name="DetailRecipeIngredients[${ingredientIndex}].IngredientId" class="shadow border rounded py-2 px-3 text-gray-700 w-2/3">
        @foreach (var ingredient in ViewBag.Ingredients)
        {
                                    <option value="@ingredient.Value">@ingredient.Text</option>
        }
                        </select>
                        <input type="text" name="DetailRecipeIngredients[${ingredientIndex}].Amount" class="shadow border rounded py-2 px-3 text-gray-700 w-1/3" placeholder="Amount">
                        <button type="button" onclick="removeIngredient(this)" class="bg-red-500 text-white px-3 py-1 rounded">x</button>
                    `;
            container.appendChild(div);
            ingredientIndex++; // Tăng biến đếm
        }

        function removeIngredient(button) {
            button.parentElement.remove();
            updateIngredientIndexes();
        }

        function updateIngredientIndexes() {
            const container = document.getElementById("ingredientsContainer");
            const ingredients = container.children;
            for (let i = 0; i < ingredients.length; i++) {
                ingredients[i].querySelector("select").setAttribute("name", `DetailRecipeIngredients[${i}].IngredientId`);
                ingredients[i].querySelector("input[type='text']").setAttribute("name", `DetailRecipeIngredients[${i}].Amount`);
            }
        }
    </script>

</body>
</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
