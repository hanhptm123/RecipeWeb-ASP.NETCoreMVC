@model RecipeWeb.Data.Recipe

@{
    ViewData["Title"] = "Recipe Details";
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-lg overflow-hidden">
        <!-- Header -->
        <div class="card-header bg-primary text-white text-center py-3 d-flex justify-content-between align-items-center">
            <h2 class="mb-0">@Model.RecipeName</h2>
            <!-- Nút yêu thích -->
            <button id="fav-button" class="btn btn-light" onclick="toggleFavourite(@Model.RecipeId)">
                <i id="fav-icon" class="@(ViewBag.IsFavourite ? "fas fa-heart text-danger" : "far fa-heart text-muted")"></i>
            </button>
        </div>

        <!-- Nội dung -->
        <div class="card-body">
            <div class="row">
                <!-- Cột 1: Nội dung chính -->
                <div class="col-md-8">
                    <h5 class="text-muted"><i class="fas fa-eye"></i> Views</h5>
                    <p class="fw-bold">@Model.Countview</p>

                    <h5 class="text-muted"><i class="fas fa-align-left"></i> Description</h5>
                    <p class="text-dark">@Html.DisplayFor(model => model.Description)</p>

                    <h5 class="text-muted"><i class="fas fa-book-open"></i> Instructions</h5>
                    @if (!string.IsNullOrEmpty(Model.Instructions))
                    {
                        <div class="border p-3 bg-light rounded shadow-sm">
                            @Html.Raw(Model.Instructions)
                        </div>
                    }
                    else
                    {
                        <p class="text-danger">No instructions provided.</p>
                    }

                    <!-- Danh sách Nguyên liệu -->
                    <h5 class="text-muted mt-4"><i class="fas fa-carrot"></i> Ingredients</h5>
                    @if (Model.DetailRecipeIngredients != null && Model.DetailRecipeIngredients.Any())
                    {
                        <div class="border p-3 bg-light rounded shadow-sm" style="max-height: 250px; overflow-y: auto;">
                            <ul class="list-group list-group-flush">
                                @foreach (var detail in Model.DetailRecipeIngredients)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span class="fw-bold">@detail.Ingredient.IngredientName</span>
                                        <span class="badge bg-primary p-2">@detail.Amount</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <p class="text-danger">No ingredients added.</p>
                    }
                </div>

                <!-- Cột 2: Hình ảnh và Thông tin bổ sung -->
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body text-center">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <img src="@Model.ImageUrl" alt="Recipe Image" class="img-fluid rounded shadow" style="max-height: 250px; object-fit: cover;">
                            }
                            else
                            {
                                <p class="text-muted">No Image Available</p>
                            }
                        </div>
                    </div>
                    <div class="mt-4 p-3 border rounded bg-light shadow-sm">
                        <h5 class="text-muted"><i class="fas fa-tags"></i> Category</h5>
                        <p class="fw-bold">@Html.DisplayFor(model => model.Category.CategoryName)</p>

                        <h5 class="text-muted"><i class="fas fa-globe"></i> Origin</h5>
                        <p class="fw-bold">@Html.DisplayFor(model => model.Origin.OriginName)</p>

                        <h5 class="text-muted"><i class="fas fa-user"></i> Created by</h5>
                        <p class="fw-bold">@Html.DisplayFor(model => model.User.Email)</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer text-center bg-white">
            <a asp-action="Index" class="btn btn-outline-secondary me-2"><i class="fas fa-arrow-left"></i> Back to List</a>
            <a asp-action="Edit" asp-route-id="@Model?.RecipeId" class="btn btn-warning"><i class="fas fa-edit"></i> Edit</a>
        </div>
    </div>
</div>

<!-- AJAX -->
<script>
    function toggleFavourite(recipeId) {
        var icon = document.getElementById("fav-icon");

        $.ajax({
            url: "/Favourites/ToggleFavourite",
            type: "POST",
            data: { recipeId: recipeId },
            success: function (response) {
                console.log(response);
                if (response.success) {
                    if (response.isFavourite) {
                        icon.classList.remove("far", "text-muted");
                        icon.classList.add("fas", "text-danger");
                    } else {
                        icon.classList.remove("fas", "text-danger");
                        icon.classList.add("far", "text-muted");
                    }
                } else {
                    alert("Error: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
                alert("Request failed: " + error);
            }
        });
    }
</script>
