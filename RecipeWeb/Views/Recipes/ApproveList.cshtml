@model IEnumerable<RecipeWeb.Data.Recipe>
@{
    Layout = "_AdminLayout";
}
<div class="container mt-4">
    <h2 class="text-primary text-center">Recipe List</h2>

    <!-- Status Filter Buttons -->
    <div class="btn-group mb-3 d-flex justify-content-center">
        <a asp-action="ApproveList" asp-route-status=""
           class="btn @(ViewBag.CurrentStatus == null ? "btn-success" : "btn-outline-success")">Pending Approval</a>
        <a asp-action="ApproveList" asp-route-status="accepted"
           class="btn @(ViewBag.CurrentStatus == "accepted" ? "btn-success" : "btn-outline-success")">Accepted</a>
        <a asp-action="ApproveList" asp-route-status="cancelled"
           class="btn @(ViewBag.CurrentStatus == "cancelled" ? "btn-danger" : "btn-outline-danger")">Rejected</a>
    </div>

    <!-- Recipe Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover shadow-sm text-center">
            <thead class="table-dark">
                <tr>
                    <th>Recipe Name</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var recipe in Model)
                {
                    <tr>
                        <td class="text-start">@recipe.RecipeName</td>
                        <td class="text-truncate" style="max-width: 300px;">@recipe.Description</td>
                        <td>
                            @if (recipe.IsApproved == null)
                            {
                                <span class="badge bg-warning text-dark">Pending</span>
                            }
                            else if (recipe.IsApproved == true)
                            {
                                <span class="badge bg-success">Accepted</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Rejected</span>
                            }
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@recipe.RecipeId" class="btn btn-info btn-sm">
                                <i class="fas fa-eye"></i> View
                            </a>

                            @if (recipe.IsApproved == null)
                            {
                                <form asp-action="Approve" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@recipe.RecipeId" />
                                    <button type="submit" name="isApproved" value="true" class="btn btn-success btn-sm">
                                        <i class="fas fa-check"></i> Accept
                                    </button>
                                </form>

                                <button class="btn btn-danger btn-sm" type="button"
                                        onclick="toggleRejectForm(@recipe.RecipeId)">
                                    <i class="fas fa-times"></i> Reject
                                </button>
                            }
                            else
                            {
                                <span class="text-muted">| No action available</span>
                            }
                        </td>
                    </tr>

                    <!-- Reject Reason Form (initially hidden) -->
                    <tr id="reject-form-@recipe.RecipeId" class="d-none">
                        <td colspan="4" class="text-start bg-light">
                            <form asp-action="Approve" method="post" onsubmit="return prepareRejectReason(@recipe.RecipeId)">
                                <input type="hidden" name="id" value="@recipe.RecipeId" />
                                <input type="hidden" name="isApproved" value="false" />
                                <input type="hidden" name="rejectReason" id="hiddenRejectReason-@recipe.RecipeId" />

                                <label class="form-label">Rejection Reason:</label>
                                <div class="mb-2">
                                    <select class="form-select" id="reasonSelect-@recipe.RecipeId" required onchange="checkCustomReason(@recipe.RecipeId)">
                                        <option value="" disabled selected>-- Select a reason --</option>
                                        <option value="Inappropriate content">Inappropriate content</option>
                                        <option value="Missing or unclear information">Missing or unclear information</option>
                                        <option value="Duplicate recipe">Duplicate recipe</option>
                                        <option value="Incorrect format">Incorrect format</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>

                                <div class="mb-2 d-none" id="customReasonDiv-@recipe.RecipeId">
                                    <label for="customReason-@recipe.RecipeId" class="form-label">Enter your reason:</label>
                                    <textarea class="form-control" id="customReason-@recipe.RecipeId" rows="2" placeholder="Type your reason..."></textarea>
                                </div>

                                <button type="submit" class="btn btn-danger">Confirm Rejection</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function toggleRejectForm(id) {
            const row = document.getElementById(`reject-form-${id}`);
            if (row) {
                row.classList.toggle("d-none");
            }
        }

        function checkCustomReason(id) {
            const select = document.getElementById(`reasonSelect-${id}`);
            const customDiv = document.getElementById(`customReasonDiv-${id}`);
            if (select.value === "Other") {
                customDiv.classList.remove("d-none");
            } else {
                customDiv.classList.add("d-none");
            }
        }

        function prepareRejectReason(id) {
            const select = document.getElementById(`reasonSelect-${id}`);
            const customTextarea = document.getElementById(`customReason-${id}`);
            const hiddenInput = document.getElementById(`hiddenRejectReason-${id}`);

            if (select.value === "Other") {
                const customValue = customTextarea.value.trim();
                if (customValue === "") {
                    alert("Please enter your rejection reason.");
                    return false;
                }
                hiddenInput.value = customValue;
            } else {
                hiddenInput.value = select.value;
            }

            return true;
        }
    </script>
}
